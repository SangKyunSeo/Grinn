<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.spring.item.dao.ItemMapper">

	<!-- 상품 등록 -->
	<insert id="insertItem" parameterType="itemVO">
		INSERT INTO item(
		item_num,
		item_brand,
		item_name,
		item_detail,
		item_model,
		item_date,
		item_price,
		<if test="item_keyword1!=null and item_keyword1!=''">
			item_keyword1,
		</if>
		<if test="item_keyword2!=null and item_keyword2!=''">
			item_keyword2,
		</if>
		<if test="item_keyword3!=null or item_keyword3!=''">
			item_keyword3,
		</if>
		item_photo1,
		item_photo1name,
		item_cate,
		item_gender,
		item_status
		) VALUES
		(
		item_seq.nextval,
		#{item_brand},
		#{item_name},
		#{item_detail},
		#{item_model},
		#{item_date},
		#{item_price},
		<if test="item_keyword1!=null and item_keyword1!=''">
			#{item_keyword1},
		</if>
		<if test="item_keyword2!=null and item_keyword2!=''">
			#{item_keyword2},
		</if>
		<if test="item_keyword3!=null or item_keyword3!=''">
			#{item_keyword3},
		</if>
		#{item_photo1},
		#{item_photo1name},
		#{item_cate},
		#{item_gender},
		#{item_status})
	</insert>
	<!-- 상품 등록 끝 -->


	<sql id="itemCategory">
		<choose>
			<when test="tab == 1">
				AND item_cate = 1
			</when><!-- 신발 -->
			<when test="tab == 2">
				AND item_cate = 2
			</when><!-- 상의 -->
			<when test="tab == 3">
				AND item_cate = 3
			</when><!-- 하의 -->
			<when test="tab == 4">
				AND item_cate = 4
			</when><!-- 기타 -->
			
		</choose>
	</sql>

	<sql id="itemSearch">
		<where>
			<if test="keyword != null and keyword != ''">
				<if test="keyfield == 1"><!-- 브랜드 -->
					item_brand LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield == 2"><!-- 상품명 -->
					item_name LIKE '%' || #{keyword} || '%'
				</if>
			</if>
			<include refid="itemCategory"></include>
		</where>
	</sql>

	<sql id="itemOrder">
		<if test="order == 1"><!-- 최신순 -->
			ORDER BY b.item_num DESC
		</if>
		<if test="order == 2"><!-- 관심상품순 -->
			ORDER BY f.fav_cnt DESC NULLS LAST
		</if>
		<if test="order == 3"><!-- 리뷰순 -->
			ORDER BY r.re_cnt DESC NULLS LAST
		</if>
	</sql>

	<!-- 전체/검색 레코드 수 -->
	<select id="selectRowCount" parameterType="map"
		resultType="integer">
		SELECT COUNT(*) FROM item
		<include refid="itemSearch"></include>
	</select>

	<!-- 전체/검색 목록 -->
	<select id="selectList" parameterType="map" resultType="itemVO">
		SELECT
		*
		FROM (SELECT
		a.*,
		rownum rnum
		FROM(SELECT
		b.*,
		r.re_cnt,
		f.fav_cnt,
		s.sale
		FROM item b
		LEFT OUTER JOIN (SELECT count(*) re_cnt, item_num FROM review GROUP BY
		item_num)r ON b.item_num=r.item_num
		LEFT OUTER JOIN (SELECT count(*) fav_cnt, item_num FROM item_fav GROUP BY
		item_num)f ON b.item_num=f.item_num
		LEFT OUTER JOIN (SELECT MIN(sale_price) sale, item_num FROM sale_bid GROUP
		BY item_num)s ON b.item_num=s.item_num
		<include refid="itemSearch"></include>
		<include refid="itemOrder"></include>
		)a)
      <![CDATA[
      WHERE rnum >= #{start} AND rnum <= #{end}
      ]]>
	</select>

	<!-- 상품 수정 -->
	<update id="updateItem" parameterType="itemVO">
		UPDATE
		item
		SET
		item_brand=#{item_brand},
		item_name=#{item_name},
		item_detail=#{item_detail},
		item_model=#{item_model},
		item_date=#{item_date},
		item_price=#{item_price},
		<if test="item_keyword1!=null and item_keyword1!=''">
			item_keyword1=#{item_keyword1},
		</if>
		<if test="item_keyword2!=null and item_keyword2!=''">
			item_keyword2=#{item_keyword2},
		</if>
		<if test="item_keyword3!=null or item_keyword3!=''">
			item_keyword3=#{item_keyword3},
		</if>
		<if test="item_photo1.length>0">
			item_photo1=#{item_photo1},
			item_photo1name=#{item_photo1name},
		</if>
		item_cate=#{item_cate},
		item_gender=#{item_gender},
		item_status=#{item_status}
		WHERE
		item_num=#{item_num}
	</update>

	<!-- 리뷰 작성 -->
	<insert id="insertReview" parameterType="itemReviewVO">
		INSERT INTO review(
		review_num,
		review_content,
		<if test="review_photo.length>0">
			review_photo,
			review_photoname,
		</if>
		review_date,
		review_star,
		item_num,
		mem_num
		) VALUES (
		review_seq.nextval,
		#{review_content},
		<if test="review_photo.length>0">
			#{review_photo},
			#{review_photoname},
		</if>
		SYSDATE,
		#{review_star},
		#{item_num},
		#{mem_num}
		)
	</insert>

	<!-- 댓글 목록 -->
	<select id="selectListReview" parameterType="map"
		resultType="itemReviewVO">
		SELECT * FROM (SELECT a.*, rownum rnum FROM
		(SELECT review_num,
			<![CDATA[
			REPLACE(REPLACE(review_content,'<','&lt;'),'>','&gt;') review_content,
			]]>
		review_date, review_modifydate,
		review_star,review_photo,review_photoname, item_num, mem_num, mem_id,
		mem_nickname
		FROM review JOIN member USING(mem_num) WHERE item_num=#{item_num}
		ORDER BY review_num DESC)a)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>

	<!-- 댓글 수정 -->
	<update id="updateReview" parameterType="itemReviewVO">
		UPDATE review SET
		review_content = #{review_content},
		<if test="review_photo.length>0">
			review_photo = #{review_photo},
			review_photoname =
			#{review_photoname},
		</if>
		review_star=#{review_star},
		review_modifydate=SYSDATE
		WHERE
		review_num=#{review_num}
	</update>
</mapper>