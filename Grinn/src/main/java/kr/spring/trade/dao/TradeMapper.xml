<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.spring.trade.dao.TradeMapper">

	<!-- 아이템 정보와 사이즈 정보 가져오기 -->
	<select id="selectGetItemSize" parameterType="integer" resultType="itemSizeVO">
		SELECT 
			i.item_num,
			i.item_brand,
			i.item_name,
			i.item_detail,
			i.item_date,
			i.item_price,
			i.item_photo1,
			i.item_photo1name,
			i.item_cate,
			i.item_status,
			s.item_sizenum,
			s.item_size
		FROM 
			item i LEFT OUTER JOIN item_size s 
			ON i.item_cate = s.item_cate
			WHERE i.item_num=#{item_num}
			
	</select>
	
	<!-- 아이템 정보로 사이즈 별 구매 입찰 가격 가져오기 -->
	<select id="selectPurchaseSizePrice" parameterType="integer" resultType="purchaseSizePriceVO">
		SELECT 
			s.item_sizenum,
			i.item_num,
			max(CASE WHEN pb.purchase_deadline >= SYSDATE THEN pb.purchase_price ELSE 0 END) as purchase_price,
			s.item_size
		FROM item_size s 
		LEFT JOIN item i ON s.item_cate = i.item_cate 
		LEFT JOIN purchase_bid pb ON s.item_sizenum = pb.item_sizenum AND i.item_num = pb.item_num
		WHERE i.item_num = #{item_num}
		GROUP BY s.item_sizenum,s.item_size,i.item_num
		ORDER BY s.item_sizenum
	</select>
	
	
	<!-- 아이템 정보로 사이즈 별 판매 입찰 가격 가져오기 -->
	<select id="selectSaleSizePrice" parameterType="integer" resultType="saleSizePriceVO">
		SELECT 
			s.item_sizenum,
			i.item_num,
			min(CASE WHEN sb.sale_deadline >= SYSDATE THEN sb.sale_price ELSE 0 END) sale_price,
			s.item_size
		FROM item_size s 
		LEFT JOIN item i ON s.item_cate = i.item_cate 
		LEFT JOIN sale_bid sb ON s.item_sizenum = sb.item_sizenum AND i.item_num = sb.item_num
		WHERE i.item_num = #{item_num}
		GROUP BY s.item_sizenum,s.item_size,i.item_num
		ORDER BY s.item_sizenum
	</select>
	
	<!-- 구매 입찰 상태 -->
	<sql id="purchaseBidStatus">
		<if test="status == 2">
			<![CDATA[
			AND pb.purchase_deadline >= SYSDATE
			]]>
		</if>
		<if test="status == 3">
			<![CDATA[
			AND pb.purchase_deadline < SYSDATE
			]]>
		</if>
	</sql>
	
	<!-- 판매 입찰 상태 -->
	<sql id="saleBidStatus">
		<if test="status == 2">
			<![CDATA[
			AND sb.sale_deadline >= SYSDATE
			]]>
		</if>
		<if test="status == 3">
			<![CDATA[
			AND sb.sale_deadline < SYSDATE
			]]>
		</if>
	</sql>
	
	<!-- 거래 상태 -->
	<sql id="tradeStatus">
		<if test="status == 1"> <!-- 전체 -->
			<![CDATA[
			AND d.trade_state <> 5
			]]>
		</if>
		<if test="status == 2"> <!-- 검수준비중 -->
			<![CDATA[
			AND d.trade_state = 2
			]]>
		</if>		
		<if test="status == 3"> <!-- 검수중 -->
			<![CDATA[
			AND d.trade_state = 3
			]]>
		</if>
		<if test="status == 4"> <!-- 배송중 -->
			<![CDATA[
			AND d.trade_state = 4
			]]>
		</if>
		<if test="status == 5"> <!-- 배송완료 -->
			<![CDATA[
			AND d.trade_state = 5
			]]>
		</if>
		<if test="status == 6"> <!-- 거래실패 -->
			<![CDATA[
			AND d.trade_state = 6
			]]>
		</if>
	</sql>
	
	<!-- 마이페이지 : 구매입찰 -->
	<select id="selectPurchaseBidInfo" parameterType="map" resultType="purchaseBidVO">
		SELECT * FROM (
			SELECT a.*, rownum rnum FROM (
				SELECT
					pb.mem_num,
					pb.purchase_price,
					pb.purchase_regDate,
					pb.purchase_deadline,
					s.item_size,
					i.item_num,
					i.item_brand,
					i.item_name,
					i.item_photo1,
					i.item_photo1name
				FROM
				purchase_bid pb 
				JOIN item i ON pb.item_num=i.item_num
				JOIN item_size s ON pb.item_sizenum=s.item_sizenum
				WHERE pb.mem_num=#{mem_num}
				<include refid="purchaseBidStatus"></include>
				ORDER BY pb.purchase_regDate DESC)
			a)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>	
	</select>
	
	<!-- 마이페이지 : 구매 거래 내역 -->
	<select id="selectTradePurchaseInfo" parameterType="map" resultType="tradeVO">
		SELECT * FROM (
			SELECT a.*,rownum rnum FROM (
				SELECT
					t.trade_num,
					t.seller_num,
					d.trade_state,
					d.trade_regDate,
					d.trade_price,
					md.mem_name,
					i.item_num,
					s.item_size,
					i.item_brand,
					i.item_name,
					i.item_photo1,
					i.item_photo1name
				FROM trade t
				LEFT OUTER JOIN trade_detail d ON t.trade_num = d.trade_num
				JOIN item i ON i.item_num=t.item_num
				JOIN item_size s on d.item_sizenum=s.item_sizenum 
				JOIN member_detail md on md.mem_num=t.seller_num
				WHERE buyer_num = #{mem_num}
				<include refid="tradeStatus"></include>
				ORDER BY d.trade_regDate DESC)a
			)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>	
	</select>
	
	<!-- 마이페이지 : 판매입찰 -->
	<select id="selectSaleBidInfo" parameterType="map" resultType="saleBidVO">
		SELECT * FROM (
			SELECT a.*, rownum rnum FROM (
				SELECT
					sb.mem_num,
					sb.sale_price,
					sb.sale_regDate,
					sb.sale_deadline,
					i.item_num,
					s.item_size,
					i.item_brand,
					i.item_name,
					i.item_photo1,
					i.item_photo1name
				FROM
				sale_bid sb 
				JOIN item i ON sb.item_num=i.item_num
				JOIN item_size s ON sb.item_sizenum=s.item_sizenum
				WHERE sb.mem_num=#{mem_num}
				<include refid="saleBidStatus"></include>
				ORDER BY sb.sale_regDate DESC)
			a)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>	
	</select>
	
	<!-- 마이페이지 : 판매 거래 내역 -->
	<select id="selectTradeSaleInfo" parameterType="map" resultType="tradeVO">
		SELECT * FROM (
			SELECT a.*,rownum rnum FROM (
				SELECT
					t.trade_num,
					t.buyer_num,
					d.trade_state,
					d.trade_regDate,
					d.trade_price,
					md.mem_name,
					s.item_size,
					i.item_num,
					i.item_brand,
					i.item_name,
					i.item_photo1,
					i.item_photo1name
				FROM trade t
				LEFT OUTER JOIN trade_detail d ON t.trade_num = d.trade_num
				JOIN item i ON i.item_num=t.item_num
				JOIN item_size s on d.item_sizenum=s.item_sizenum 
				JOIN member_detail md on md.mem_num=t.buyer_num
				WHERE seller_num = #{mem_num}
				<include refid="tradeStatus"></include>
				ORDER BY d.trade_regDate DESC)a
			)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>	
	</select>
	
	
	
	
</mapper>